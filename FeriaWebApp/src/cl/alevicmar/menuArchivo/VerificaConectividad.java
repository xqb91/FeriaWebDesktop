/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl.alevicmar.menuArchivo;

import cl.alevicmar.services.agrupacion.WebServiceAgrupacion;
import cl.alevicmar.services.categoria.WebServiceCategoria;
import cl.alevicmar.services.cliente.WebServiceCliente;
import cl.alevicmar.services.comuna.WebServiceComuna;
import cl.alevicmar.services.egreso.WebServiceEgreso;
import cl.alevicmar.services.familia.WebServiceFamilia;
import cl.alevicmar.services.metodopago.WebServiceMetodopago;
import cl.alevicmar.services.ordenventa.WebServiceOrdendeventa;
import cl.alevicmar.services.pais.WebServicePais;
import cl.alevicmar.services.producto.WebServiceProducto;
import cl.alevicmar.services.productor.WebServiceProductor;
import cl.alevicmar.services.provincia.WebServiceProvincia;
import cl.alevicmar.services.region.WebServiceRegion;
import cl.alevicmar.services.stock.WebServiceStock;
import cl.alevicmar.services.ubicacionproductor.WebServiceUbicacionProductor;
import java.awt.geom.Point2D;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import maps.java.Geocoding;

/**
 *
 * @author Victor Manuel Araya
 */
public class VerificaConectividad extends javax.swing.JFrame {

    String error = "";
    
    //atributos de webservices
    WebServiceAgrupacion            srvAgrupacion           = null;
    WebServiceCategoria             srvCategoria            = null;
    WebServiceCliente               srvCliente              = null;
    WebServiceComuna                srvComuna               = null;
    WebServiceEgreso                srvEgreso               = null;
    WebServiceFamilia               srvFamilia              = null;
    WebServiceMetodopago            srvMetodoPago           = null;
    WebServiceOrdendeventa          srvOrdenVenta           = null;
    WebServicePais                  srvPais                 = null;
    WebServiceProducto              srvProducto             = null;
    WebServiceProductor             srvProductor            = null;
    WebServiceProvincia             srvProvincia            = null;
    WebServiceRegion                srvRegion               = null;
    WebServiceStock                 srvStock                = null;
    WebServiceUbicacionProductor    srvUbicacionProductor   = null;
    
    //servicio de mapas
    Geocoding                       mapa                    = null;
    
    public VerificaConectividad() {
        initComponents();
        //asignando iconos segun proceso
        /*
        NO REVISADO: setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/plugin_disabled.png")));
        REVISANDO  : setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/bullet_go.png")));
        CORRECTO   : setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/accept.png")));
        ERROR      : setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/cross.png")));
        PROBLEMA   : setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/error.png"))); // NOI18N
        */
        this.comprobar();
        
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblGeografico = new javax.swing.JLabel();
        lblStatusGeografico = new javax.swing.JLabel();
        lblTerminal = new javax.swing.JLabel();
        lblStatusTerminal = new javax.swing.JLabel();
        lblStatusProductores = new javax.swing.JLabel();
        lblProductores = new javax.swing.JLabel();
        lblStatusVentas = new javax.swing.JLabel();
        lblVentas = new javax.swing.JLabel();
        lblStatusProductos = new javax.swing.JLabel();
        lblProductos = new javax.swing.JLabel();
        lblStatusClientes = new javax.swing.JLabel();
        lblClientes = new javax.swing.JLabel();
        lblStatusGoogle = new javax.swing.JLabel();
        lblGoogle = new javax.swing.JLabel();
        btnComprobar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Comprobando conectividad");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/imagenes/server.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Comprobando Conectividad"));

        lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/plugin_disabled.png"))); // NOI18N
        lblGeografico.setToolTipText("");

        lblStatusGeografico.setText("Verificando conectividad de Servicios Geográficos");

        lblTerminal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/bullet_go.png"))); // NOI18N

        lblStatusTerminal.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        lblStatusTerminal.setText("Verificando conexión del terminal");

        lblStatusProductores.setText("Verificando conectividad de Servicios de Productores");

        lblProductores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/accept.png"))); // NOI18N

        lblStatusVentas.setText("Verificando conectividad de Servicios de Ventas");

        lblVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/cross.png"))); // NOI18N

        lblStatusProductos.setText("Verificando conectividad de Servicios de Productos");

        lblProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/error.png"))); // NOI18N

        lblStatusClientes.setText("Verificando conectividad de Servicios de Clientes");

        lblClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/plugin_disabled.png"))); // NOI18N

        lblStatusGoogle.setText("Verificando conectividad de Servicios de Google™ Maps");

        lblGoogle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/application.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGeografico)
                    .addComponent(lblTerminal)
                    .addComponent(lblProductores)
                    .addComponent(lblVentas)
                    .addComponent(lblProductos)
                    .addComponent(lblClientes)
                    .addComponent(lblGoogle))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatusGoogle)
                    .addComponent(lblStatusProductos)
                    .addComponent(lblStatusVentas)
                    .addComponent(lblStatusProductores)
                    .addComponent(lblStatusTerminal)
                    .addComponent(lblStatusGeografico)
                    .addComponent(lblStatusClientes))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTerminal)
                    .addComponent(lblStatusTerminal))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGeografico)
                    .addComponent(lblStatusGeografico))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatusProductores)
                    .addComponent(lblProductores))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatusVentas)
                    .addComponent(lblVentas))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatusProductos)
                    .addComponent(lblProductos))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatusClientes)
                    .addComponent(lblClientes))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatusGoogle)
                    .addComponent(lblGoogle))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnComprobar.setText("Comprobar");
        btnComprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprobarActionPerformed(evt);
            }
        });

        jButton2.setText("Reintentar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnComprobar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnComprobar)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprobarActionPerformed

    }//GEN-LAST:event_btnComprobarActionPerformed

    public void comprobar() {
        try {
            lblTerminal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/bullet_go.png")));
            lblStatusTerminal.setFont(new java.awt.Font("Tahoma", 1, 11));
            lblTerminal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/accept.png")));
            lblStatusTerminal.setFont(new java.awt.Font("Tahoma", 0, 11));
            
            
            //instanciando servicios geográficos ------------------------------------------------
            //seteando estado en splash!
            //lblEstado.setText("Iniciando servicios geográficos...");
            lblStatusGeografico.setFont(new java.awt.Font("Tahoma", 1, 11));
            lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/bullet_go.png")));
            error = "0x00000001: No se pudo conectar servicios geográficos de pais";
            //srvPais              = new WebServicePais();
            lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/cross.png")));
            error = "0x00000002: No se pudo conectar servicios geográficos de región";
            //srvRegion          = new WebServiceRegion();
            lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/cross.png")));
            error = "0x00000003: No se pudo conectar servicios geográficos de provincia";
            //srvProvincia    = new WebServiceProvincia();
            lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/cross.png")));
            error = "0x00000004: No se pudo conectar servicios geográficos de comuna";
            //WebServiceComuna srvComuna          = new WebServiceComuna();
            lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/error.png")));
            //comprobando servicios geograficos ------------------------------------------------
            error = "0x00000005: No se pudo verificar conectividad con servicio de paises";
            //srvPais.getWebServicePaisSoap().esActivo();
            lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/cross.png")));
            error = "0x00000006: No se pudo verificar conectividad con servicio de regiones";
            //srvRegion.getWebServiceRegionSoap().esActivo();
            lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/cross.png")));
            error = "0x00000007: No se pudo verificar conectividad con servicio de provincias";
            //srvProvincia.getWebServiceProvinciaSoap().esActivo();
            error = "0x00000008: No se pudo verificar conectividad con servicio de comunas";
            lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/cross.png")));
            //srvComuna.getWebServiceComunaSoap().esActivo();
            lblStatusGeografico.setFont(new java.awt.Font("Tahoma", 0, 11));
            lblGeografico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/alevicmar/icons/accept.png")));
            
            //instanciando servicios de productores ----------------------------------------------
            //seteando estado en splash!
            //lblEstado.setText("Cargando información de productores...");

            error = "0x00000009: No se pudo conectar servicios de agrupación de productores";
           // srvAgrupacion                  = new WebServiceAgrupacion();
            error = "0x0000000a: No se pudo conectar servicios de productores";
            //srvProductor                    = new WebServiceProductor();
            error = "0x0000000b: No se pudo conectar servicios de ubicacion de productores";
            //srvUbicacionProductor  = new WebServiceUbicacionProductor();
            //comprobando servicios de productores -----------------------------------------------
            error = "0x0000000c: No se pudo verificar conectividad con servicio de agrupación de productores";
            //srvAgrupacion.getWebServiceAgrupacionSoap().esActivo();
            error = "0x0000000d: No se pudo verificar conectividad con servicio de productores";
            //srvProductor.getWebServiceProductorSoap().esActivo();
            error = "0x0000000e: No se pudo verificar conectividad con servicio de ubicación de productores";
            //srvUbicacionProductor.getWebServiceUbicacionProductorSoap().esActivo();


            //Instanciando plataforma de ventas --------------------------------------------------
            //seteando estado en splash!
            //lblEstado.setText("Cargando información de ventas...");

            error = "0x0000000f: No se pudo conectar servicios de egresos de ventas";
            //srvEgreso              = new WebServiceEgreso();
            error = "0x00000010: No se pudo conectar servicios de método de pagos de ventas";
            //srvMetodoPago      = new WebServiceMetodopago();
            error = "0x00000011: No se pudo conectar servicios de orden de ventas";
            //srvOrdenVenta    = new WebServiceOrdendeventa();
            error = "0x00000012: No se pudo conectar servicios de stock de ventas";
            //WebServiceStock srvStock                = new WebServiceStock();
            //comprobando servicios de ventas ------------------------------------------------------
            error = "0x00000013: No se pudo verificar conectividad con servicio de egresos de ventas";
            //srvEgreso.getWebServiceEgresoSoap().esActivo();
            error = "0x00000014: No se pudo verificar conectividad con servicio de metodos de pago de ventas";
            //srvMetodoPago.getWebServiceMetodopagoSoap().esActivo();
            error = "0x00000015: No se pudo verificar conectividad con servicio de ordenes de ventas";
            //srvOrdenVenta.getWebServiceOrdendeventaSoap().esActivo();
            error = "0x00000016: No se pudo verificar conectividad con servicio de stock de ventas";
            //srvStock.getWebServiceStockSoap().esActivo();


            //Instanciando plataforma de productos ---------------------------------------------------
            //seteando estado en splash!
            //lblEstado.setText("Recopilando catalogo de productos...");

            error = "0x00000017: No se pudo conectar servicios de categoria de productos";
            //srvCategoria        = new WebServiceCategoria();
            error = "0x00000018: No se pudo conectar servicios de familia de productos";
            //srvFamilia            = new WebServiceFamilia();
            error = "0x00000019: No se pudo conectar servicios de listado de productos";
            //srvProducto          = new WebServiceProducto();
            //comprobando servicios de productos -----------------------------------------------------
            error = "0x0000001a: No se pudo verificar los servicios de categoria de productos";
            //srvCategoria.getWebServiceCategoriaSoap().esActivo();
            error = "0x0000001b: No se pudo verificar los servicios de familia de productos";
            //srvFamilia.getWebServiceFamiliaSoap().esActivo();
            error = "0x0000001c: No se pudo verificar los servicios de listado de productos";
            //srvProducto.getWebServiceProductoSoap().esActivo();

            //Instanciando plataforma de administracion de clientes -----------------------------------
            //seteando estado en splash!
            //lblEstado.setText("Carga plataforma de administración...");

            error = "0x0000001d: No se pudo conectar los servicios de listado de clientes";
            //srvCliente            = new WebServiceCliente();
            //comprobando servicios de administracion de clientes -------------------------------------
            error = "0x0000001f: No se pudo verificar los servicios de listado de clientes";
            //srvCliente.getWebServiceClienteSoap().esActivo();

            //google maps -----------------------------------------------------------------------------
            //lblEstado.setText("Arrancando motor de Google™ Maps...");
            error = "0x00000020: No se pudo arrancar el motor de Google™ Maps";
            //mapa = new Geocoding();
            error = "0x00000021: Imposible establecer punto de referencia inicial de Google™ Maps";
            //Point2D.Double resultado = mapa.getCoordinates("Santiago, Plaza de Armas");

        }catch(Exception e) {
            String mensaje = "<html><body><div width='300px' align='justify'>Feria Web Desktop Client ha detectado un problema mientras intentaba inicarse: <br /><br /><em>"+e.getMessage()+"<br /><b>Error "+error+"</b></em><br /><br />Por favor verifique su conexión a internet o bien contacte a Alevicmar Software Chile para obtener soporte técnico.</div></body></html>";
            JLabel mensajeLabel = new JLabel(mensaje);
            JOptionPane.showMessageDialog(null, mensajeLabel, "Feria Web Desktop Client", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerificaConectividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerificaConectividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerificaConectividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerificaConectividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerificaConectividad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComprobar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblClientes;
    private javax.swing.JLabel lblGeografico;
    private javax.swing.JLabel lblGoogle;
    private javax.swing.JLabel lblProductores;
    private javax.swing.JLabel lblProductos;
    private javax.swing.JLabel lblStatusClientes;
    private javax.swing.JLabel lblStatusGeografico;
    private javax.swing.JLabel lblStatusGoogle;
    private javax.swing.JLabel lblStatusProductores;
    private javax.swing.JLabel lblStatusProductos;
    private javax.swing.JLabel lblStatusTerminal;
    private javax.swing.JLabel lblStatusVentas;
    private javax.swing.JLabel lblTerminal;
    private javax.swing.JLabel lblVentas;
    // End of variables declaration//GEN-END:variables
}
